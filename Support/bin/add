#!/usr/bin/ruby -w
# encoding: UTF-8

require 'cgi'
require "open3"

# Create temporary file (don't use this execution style if user input is involved)
tmpfilename = `mktemp -t add_input`.chop

File.open(tmpfilename, "w+") do |tmpfile|

  # Something like this could be used to use AppleScript to select a default calendar if none exists
  # tell application id "com.apple.iCal"
  #   activate
  #   set theCalendars to name of calendars whose writable is true
  #   set res to choose from list theCalendars with title "Please select a source calendar" without empty selection allowed
  #   if res is false then
  #     return ""
  #   end if
  #   
  #   return item 1 of res
  # end tell

  # Calendar
  calendar = `defaults read com.freron.MailMate MmDefaultCalendarName`
  if $?.exitstatus != 0 || calendar.empty?
    calendar = "Work"
  end
  tmpfile.puts(calendar)

  # Subject
  tmpfile.puts(ENV['MM_SUBJECT'])

  # Message URL
  tmpfile.puts("message://" + CGI::escape(ENV['MM_MESSAGE_ID']))

  detect_path = ENV['MM_SUPPORT_PATH'] + "/bin/detect"
  canonical = $stdin.read
  range_string = ENV['MM_SELECTED_RANGE']
  selection = ""
  if range_string.nil?
    selection = canonical
  else
    offset1,offset2 = range_string.match(/(\d+):(\d+)/).captures
    range = Integer(offset1)..Integer(offset2)
    selection = canonical[range]
    selection.gsub!("\n", ' ')
  end

  stdin, stdout, stderr = Open3.popen3(detect_path)
  stdin.print selection
  stdin.close
  
  # Date (or empty)
  tmpfile.puts(stdout.read)
  stdout.close
  stderr.close

  # Output note
  # tmpfile.puts canonical
end

# Use AppleScript to communicate with the application
system(ENV['MM_BUNDLE_SUPPORT'] + "/bin/create_event", tmpfilename)

# Cleanup
File.unlink(tmpfilename)
